$text-color: red;

.blog-post, h2{
  color: $text-color;
}

hr{
  height: 5px;
  background-color: black;
  border: none;
}

.blog-post{
  h1 {
    text-align: center;
    color: blue;
  }
    p{
      font-size: 20px;
  }
  
}

// Create Reusable CSS with Mixins
@mixin border-radius($radius){
  -webkit-border-radius:$radius;
  -moz-border-radius:$radius;
  -ms-border-radius:$radius;
  border-radius: $radius;
}

#awesome {
  width: 150px;
  height: 150px;
  background-color: green;
  @include border-radius(15px);
}

// Use @if and @else to Add Logic To Your Styles
@mixin border-stroke($val){
  @if $val == light {
    border: 1px solid black;
  }
  @else if $val == medium{
    border: 3px solid black;
  }
  @else if $val == heavy{
    border: 6px solid black;
  }
  @else{
    border: none;
  }
}

#box {
  width: 150px;
  height: 150px;
  background-color: red;
  @include border-stroke(medium);
}

// Use @for to Create a Sass Loop
@for $i from 1 through 5{
  .text-#{$i} {
    font-size: 15px * $i ;
  }
}

// Use @each to Map Over Items in a List
$colors : (color1:blue, color2: black, color3: red);

@each $key,$color in $colors{
  .#{$color}-bg {background-color : $color;
  height: 200px;
  width: 200px;}
}

// Apply a Style Until a Condition is Met with @while
$x: 6;

@while $x < 11 {
  .text-#{$x} {font-size: 15px * $x;}
  $x: $x + 1;
}

// Extend One Set of CSS Styles to Another Element
h3{
  text-align: center;
}
.info{
  width: 200px;
  border: 1px solid black;
  margin: 0 auto;
}

.info-important{
  background-color: magenta;
  @extend .info;
}